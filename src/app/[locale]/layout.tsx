import { ReactNode } from "react";

import type { Metadata } from "next";
import { hasLocale, NextIntlClientProvider } from 'next-intl';
import { ThemeProvider } from 'next-themes';

import { Geist, Geist_Mono } from "next/font/google";
import { notFound } from 'next/navigation';

import Navbar from "@/components/Navbar";
import { AuthProvider } from "@/contexts/AuthContext";
import { routing } from '@/i18n/routing';

import "@/app/global.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: ReactNode;
  params: Promise<{ locale: string }>;
};

export default async function LocaleLayout({ children, params }: Props) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale} suppressHydrationWarning>
    <body className={`${geistSans.variable} ${geistMono.variable} font-sans`}>
    <AuthProvider>
      <ThemeProvider attribute='class'>
        <NextIntlClientProvider>
          <Navbar/>
          {children}
        </NextIntlClientProvider>
      </ThemeProvider>
    </AuthProvider>
    </body>
    </html>
  );
}
